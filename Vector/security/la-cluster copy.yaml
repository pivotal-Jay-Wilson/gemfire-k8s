# kubectl -n us create secret generic gem-admin --from-literal=username=operator --from-literal=password=secret
apiVersion: v1
data:
  password: c2VjcmV0
  username: b3BlcmF0b3I=
kind: Secret
metadata:
  creationTimestamp: "2025-02-26T03:05:30Z"
  name: gem-admin
  namespace: us
  resourceVersion: "7831"
  uid: 669c6f59-185c-4802-88d6-3dc0a4653537
type: Opaquek 
---    
apiVersion: gemfire.vmware.com/v1
kind: GemFireCluster
metadata:
  name: la
  namespace: us
spec:
  security:
    tls: {}  
    mgmtSvcCredentialsSecretName: gem-admin
  image: registry.packages.broadcom.com/pivotal-gemfire/vmware-gemfire:10.1.1
  imagePullSecrets:
    - name: image-pull-secret
  locators:
    libraries:
      - name: my-custom-security-manager
        container:
          image: demo.goharbor.io/gemfiredemo/gemfirelibs:ver2 
          path: "/custom-manager/*.jar"
    overrides:
      gemFireProperties:
        - name: "start-dev-rest-api"
          value: "true"
        - name: "distributed-system-id"
          value: "3"
        - name: "security-manager"
          value: "dev.jawilson.gemfire.BasicSecurityManager"
        - name: "security-peer-auth-init"
          value: "org.apache.geode.security.AuthInitialize"
        # - name: "security-json"
        #   value: "/security-configuration/security.json"  
      # statefulSet:
      #   spec:
      #     template:
      #       spec:
      #         volumes:
      #           - name: security-config-volume
      #             configMap:
      #               name: secrityconfig
      #         containers:
      #           - name: locator
      #             volumeMounts:
      #               - name: security-config-volume
      #                 mountPath: "/security-configuration"          
  servers:
    libraries:
      - name: my-custom-security-manager
        container:
          image: demo.goharbor.io/gemfiredemo/gemfirelibs:ver2 
          path: "/custom-manager/*.jar"  
    overrides:
      gemFireProperties:
        - name: "start-dev-rest-api"
          value: "true"
        - name: "security-manager"
          value: "dev.jawilson.gemfire.BasicSecurityManager"
        - name: "security-peer-auth-init"
          value: "org.apache.geode.security.AuthInitialize"
        # - name: "security-json"
        #   value: "/security-configuration/security.json"            
      # statefulSet:
      #   spec:
      #     template:
      #       spec:
      #         volumes:
      #           - name: security-config-volume
      #             configMap:
      #               name: secrityconfig
      #         containers:
      #           - name: locator
      #             volumeMounts:
      #               - name: security-config-volume
      #                 mountPath: "/security-configuration"


      # ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: secrityconfig
#   namespace: us
# data:
#   security.json: |
    # {
    #   "roles": [
    #     {
    #       "name": "data",
    #       "operationsAllowed": [
    #         "DATA:MANAGE",
    #         "DATA:WRITE",
    #         "DATA:READ"
    #       ]
    #     },
    #     {
    #       "name": "cluster",
    #       "operationsAllowed": [
    #         "CLUSTER:MANAGE",
    #         "CLUSTER:WRITE",
    #         "CLUSTER:READ"
    #       ]
    #     },
    #     {
    #       "name": "region1data",
    #       "operationsAllowed": [
    #         "DATA:MANAGE",
    #         "DATA:WRITE",
    #         "DATA:READ"
    #       ],
    #       "regions": ["region1"]
    #     },
    #     {
    #       "name": "dataReader",
    #       "operationsAllowed": [
    #         "DATA:READ"
    #       ]
    #     },
    #     {
    #       "name": "dataWriter",
    #       "operationsAllowed": [
    #         "DATA:WRITE"
    #       ]
    #     }
    #   ],
    #   "users": [
    #     {
    #       "name": "superUser",
    #       "password": "123",
    #       "roles": [
    #         "cluster",
    #         "data"
    #       ]
    #     },
    #     {
    #       "name": "region1dataAdmin",
    #       "password": "123",
    #       "roles": [
    #         "region1data"
    #       ]
    #     },
    #     {
    #       "name": "dataReader",
    #       "password": "123",
    #       "roles": [
    #         "dataReader"
    #       ]
    #     },
    #     {
    #       "name": "dataWriter",
    #       "password": "123",
    #       "roles": [
    #         "dataWriter"
    #       ]
    #     }
    #   ]
    # }
